name: build

on:
  push:
    branches:
    - main
  pull_request: { }

defaults:
  run:
    shell: bash

jobs:
  build:
    if: ${{
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      || (github.event_name == 'push' && !startsWith(github.event.head_commit.message, '[skip ci]') && !startsWith(github.event.head_commit.message, '[push-back]'))
      || github.event_name != 'push'
      }}
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: true
        fetch-depth: 1


    - name: Setup node 12
      uses: actions/setup-node@v2
      with:
        node-version: '12'


    - name: node_modules cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-node_modules-${{ hashFiles('package.json', '*.lock') }}
        path: |
          node_modules


    - name: Install dependencies
      run: |
        yarn install

    - name: Build
      run: |
        npm run build


    - name: Run current action
      id: current
      uses: ./

    - name: Print result
      env:
        RESULT: ${{toJSON(fromJSON(steps.current.outputs.result))}}
      run: |
        echo "$RESULT"

    - name: Validate current action
      env:
        FULL_NAME: ${{fromJSON(steps.current.outputs.result).fullName}}
        OWNER_LOGIN: ${{fromJSON(steps.current.outputs.result).owner.login}}
        OWNER_NAME: ${{fromJSON(steps.current.outputs.result).owner.name}}
        OWNER_IS_USER: ${{fromJSON(steps.current.outputs.result).owner.isUser}}
        OWNER_IS_ORGANIZATION: ${{fromJSON(steps.current.outputs.result).owner.isOrganization}}
        LICENSE_DESCRIPTION: ${{fromJSON(steps.current.outputs.result).license.description}}
      run: |
        if [ "$FULL_NAME" != "${{github.repository}}" ]; then
          echo "::error Repository full name '$FULL_NAME' doesn't equal to expected '${{github.repository}}'"
          exit 1
        fi
        if [ "$OWNER_LOGIN" != "${{github.repository_owner}}" ]; then
          echo "::error Repository owner '$OWNER_LOGIN' doesn't equal to expected '${{github.repository_owner}}'"
          exit 1
        fi
        if [ "$OWNER_NAME" == "" ]; then
          echo "::error Repository owner name is not set or empty"
          exit 1
        fi
        if [ "$OWNER_IS_USER" != "" ]; then
          echo "::error Repository owner isUser is not empty"
          exit 1
        fi
        if [ "$OWNER_IS_ORGANIZATION" != "true" ]; then
          echo "::error Repository owner isOrganization does't equal to true"
          exit 1
        fi
        if [ "$LICENSE_DESCRIPTION" == "" ]; then
          echo "::error Repository license description is not set or empty"
          exit 1
        fi


    - name: Push back
      env:
        PUSH_BACK_TOKEN: ${{ secrets.PUSH_BACK_TOKEN }}
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/') && env.PUSH_BACK_TOKEN }}
      uses: remal-github-actions/push-back@v1
      with:
        githubToken: ${{ env.PUSH_BACK_TOKEN }}
        message: '[push-back] Push-back updated files during build'


    - name: Read version
      id: readVersion
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      uses: remal-github-actions/read-nodejs-package-version@v1

    - name: Create tag
      env:
        PUSH_BACK_TOKEN: ${{ secrets.PUSH_BACK_TOKEN }}
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && env.PUSH_BACK_TOKEN }}
      uses: remal-github-actions/create-tag@v1
      with:
        githubToken: ${{ env.PUSH_BACK_TOKEN }}
        tagName: 'v${{ steps.readVersion.outputs.majorVersion }}'
        forcePush: 'true'
